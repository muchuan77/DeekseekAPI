name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    
    - name: Build Backend
      run: |
        cd backend
        mvn clean install
    
    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build
    
    - name: Install Python Dependencies
      run: |
        cd ai-model
        pip install -r requirements.txt
    
    - name: Run Backend Tests
      run: |
        cd backend
        mvn test
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm run test
    
    - name: Run AI Model Tests
      run: |
        cd ai-model
        python -m pytest
    
    - name: Build and Push Docker Images
      if: github.ref == 'refs/heads/main'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker-compose build
        docker tag rumor-tracing-backend $DOCKER_USERNAME/rumor-tracing-backend:latest
        docker tag rumor-tracing-frontend $DOCKER_USERNAME/rumor-tracing-frontend:latest
        docker tag rumor-tracing-ai $DOCKER_USERNAME/rumor-tracing-ai:latest
        docker push $DOCKER_USERNAME/rumor-tracing-backend:latest
        docker push $DOCKER_USERNAME/rumor-tracing-frontend:latest
        docker push $DOCKER_USERNAME/rumor-tracing-ai:latest
    
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        scp -i deploy_key -o StrictHostKeyChecking=no docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:~/rumor-tracing/
        ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "cd ~/rumor-tracing && docker-compose pull && docker-compose up -d" 