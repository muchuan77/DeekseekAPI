name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.8'
    #     cache: 'pip'
    
    - name: Run SonarQube Scanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd backend
        mvn sonar:sonar \
          -Dsonar.projectKey=muchuan77_DeepseekAPI \
          -Dsonar.organization=muchuan77 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    
    - name: Run ESLint
      run: |
        cd frontend
        npm install
        npm run lint
    
    # - name: Run Python Linting
    #   run: |
    #     cd ai-model
    #     pip install flake8 pylint
    #     flake8 .
    #     pylint **/*.py
    
    - name: Run Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
    
    - name: Run Dependency Check
      run: |
        cd backend
        mvn org.owasp:dependency-check-maven:check 

    - name: Run Backend Coverage
      run: |
        cd backend
        mvn test
        mvn jacoco:report
    - name: Upload Backend Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: true

    - name: Run Frontend Coverage
      run: |
        cd frontend
        npm run test:coverage
    - name: Upload Frontend Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: true

#     - name: Run AI Model Coverage
#       run: |
#         cd ai-model
#         pip install numpy==1.24.4
#         pip install -r requirements.txt
#         pytest --cov=. --cov-report=xml
#     - name: Upload AI Model Coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         files: ai-model/coverage.xml
#         flags: ai-model
#         name: ai-model-coverage
#         fail_ci_if_error: true 