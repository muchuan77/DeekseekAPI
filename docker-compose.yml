# ────────────────────────────── ① 统一网络 ──────────────────────────────
networks:
  rumor-network:
    driver: bridge

# ────────────────────────────── ② 数据卷 ───────────────────────────────
volumes:
  mysql_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

# ────────────────────────────── ③ 服务定义 ─────────────────────────────
services:

  # ───── MySQL (先放最前面方便 healthcheck 依赖) ─────
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports:       
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-Yxh258012}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-rumor_tracing}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_PASSWORD:-Yxh258012}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - rumor-network

  # ───── Redis ─────
  redis:
    image: redis:6.2
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis}
    ports:
      - "6379:6379"
    networks:
      - rumor-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ───── Elasticsearch ─────
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: deepseek_api-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=ecat
      - ELASTIC_PASSWORD=yxh258012
      - cluster.name=rumor-tracing
      - network.host=0.0.0.0
      - http.port=9200
      - transport.port=9300
      - action.destructive_requires_name=true
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -u ecat:yxh258012 -s http://localhost:9200 >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - rumor-network

  # ───── 后端 ─────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - rumor-network

  # ───── 前端 ─────
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://localhost:8080
    depends_on:
      - backend
    networks:
      - rumor-network

  # ───── Prometheus ─────
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=200h'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - rumor-network

  # ───── Grafana ─────
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_METRICS_ENABLED: "true"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - rumor-network

  # MySQL Exporter
  mysqld-exporter:
    image: prom/mysqld-exporter
    environment:
      - DATA_SOURCE_NAME=root:Yxh258012@(mysql:3306)/
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    networks:
      - rumor-network

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter
    command: --redis.addr=redis://:redis@redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - rumor-network

  # Elasticsearch Exporter
  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.1.0
    environment:
      - ES_URI=http://elasticsearch:9200
      - ES_USERNAME=ecat
      - ES_PASSWORD=yxh258012
    ports:
      - "9114:9114"
    depends_on:
      - elasticsearch
    networks:
      - rumor-network
