server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
    encoding:
      enabled: true
      charset: UTF-8
      force: true

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: rumor-tracing-backend

  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

  profiles:
    active: local

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/rumor_tracing?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&logger=Slf4JLogger&profileSQL=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:Yxh258012}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 30000

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: UTC

  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${SPRING_REDIS_PASSWORD:redis}
    database: 0
    timeout: 10000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1

  elasticsearch:
    rest:
      uris: http://${ELASTIC_HOST:localhost}:${ELASTIC_PORT:9200}
      username: ${ELASTIC_USERNAME:ecat}
      password: ${ELASTIC_PASSWORD:yxh258012}
    connection-timeout: 10000
    socket-timeout: 10000
    connection-request-timeout: 10000
    max-conn-total: 100
    max-conn-per-route: 100
    properties:
      path.home: /usr/share/elasticsearch
      path.data: /usr/share/elasticsearch/data
      path.logs: /usr/share/elasticsearch/logs
      http.cors.enabled: true
      http.cors.allow-origin: "*"
      http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers: X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

logging:
  level:
    root: INFO
    com.rumor.tracing: DEBUG
    org.springframework.web: INFO
    org.springdoc: INFO
    org.springframework.security: INFO
    org.hibernate: INFO
    com.zaxxer.hikari: INFO
    org.springframework.jdbc: INFO
    org.elasticsearch: INFO
    org.springframework.data.elasticsearch: DEBUG
    org.elasticsearch.client: DEBUG
  file:
    name: logs/application.log

ai:
  service:
    url: ${AI_SERVICE_URL:https://api.deepseek.com}
    api-key: ${AI_SERVICE_API_KEY:sk-c8c70eeb1e2243bf86eaa3e279549074}
    timeout: ${AI_SERVICE_TIMEOUT:60000}
    max-retries: 3
    retry-delay: 1000
    model: deepseek-chat
    temperature: 0.7
    max-tokens: 2000
    frequency-penalty: 0
    presence-penalty: 0
    top-p: 1

jwt:
  secret: ${JWT_SECRET:J8#kL9$mN2@pQ5*rT7&vX3!wY4^zB6}
  expiration: ${JWT_EXPIRATION:86400}

# DeepSeek API配置
deepseek:
  api:
    url: ${DEEPSEEK_API_URL:https://api.deepseek.com}
    key: ${DEEPSEEK_API_KEY:sk-c8c70eeb1e2243bf86eaa3e279549074}

# 管理端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  packages-to-scan: com.rumor.tracing.controller
  paths-to-match: /api/**
  group-configs:
    - group: 'default'
      paths-to-match: '/api/**'
      packages-to-scan: com.rumor.tracing.controller

